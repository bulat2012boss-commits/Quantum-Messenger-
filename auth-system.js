// auth-system.js - –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è Quantum Messenger

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const AUTH_CONFIG = {
    minPasswordLength: 6,
    maxLoginAttempts: 5,
    sessionTimeout: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞
    requireEmail: false
};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
let currentSession = null;
let loginAttempts = 0;
let isLoggedIn = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function initAuthSystem() {
    console.log("üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
    checkExistingSession();
    
    // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    modifyAuthInterface();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupAuthEventListeners();
    
    console.log("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞");
}

// –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function modifyAuthInterface() {
    const authContainer = document.getElementById('authContainer');
    if (!authContainer) return;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const originalAuthHTML = authContainer.innerHTML;
    
    // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    authContainer.innerHTML = `
        <div class="auth-tabs">
            <div class="auth-tab active" data-tab="login">–í—Ö–æ–¥</div>
            <div class="auth-tab" data-tab="register">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</div>
        </div>
        
        <div class="auth-content">
            <!-- –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ -->
            <div class="auth-form active" id="loginForm">
                <div class="auth-title">–í—Ö–æ–¥ –≤ Quantum Messenger</div>
                
                <div class="auth-alert" id="loginAlert" style="display: none;"></div>
                
                <input type="text" id="loginUsername" placeholder="–õ–æ–≥–∏–Ω –∏–ª–∏ email" autocomplete="username">
                <input type="password" id="loginPassword" placeholder="–ü–∞—Ä–æ–ª—å" autocomplete="current-password">
                
                <div class="auth-options">
                    <label class="auth-checkbox">
                        <input type="checkbox" id="rememberMe">
                        <span>–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è</span>
                    </label>
                    <a href="#" class="auth-link" id="forgotPasswordLink">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</a>
                </div>
                
                <button id="loginBtn" class="auth-submit-btn">–í–æ–π—Ç–∏</button>
                
                <div class="auth-divider">
                    <span>–∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä–æ</span>
                </div>
                
                <div class="quick-auth-options">
                    <button class="quick-auth-btn" onclick="quickLogin('demo')">
                        <i class="fas fa-user"></i> –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç
                    </button>
                    <button class="quick-auth-btn" onclick="quickLogin('guest')">
                        <i class="fas fa-user-clock"></i> –ì–æ—Å—Ç–µ–≤–æ–π –≤—Ö–æ–¥
                    </button>
                </div>
            </div>
            
            <!-- –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -->
            <div class="auth-form" id="registerForm">
                <div class="auth-title">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Quantum Messenger</div>
                
                <div class="auth-alert" id="registerAlert" style="display: none;"></div>
                
                <input type="text" id="registerUsername" placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω" autocomplete="username">
                <input type="email" id="registerEmail" placeholder="Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" autocomplete="email">
                <input type="password" id="registerPassword" placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å" autocomplete="new-password">
                <input type="password" id="registerConfirmPassword" placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" autocomplete="new-password">
                
                <div class="password-strength" id="passwordStrength">
                    <div class="strength-bar">
                        <div class="strength-fill" id="strengthFill"></div>
                    </div>
                    <div class="strength-text" id="strengthText">–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è</div>
                </div>
                
                <div class="auth-options">
                    <label class="auth-checkbox">
                        <input type="checkbox" id="agreeTerms" checked>
                        <span>–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å <a href="#" onclick="showTerms()">–ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a></span>
                    </label>
                </div>
                
                <button id="registerBtn" class="auth-submit-btn">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
            </div>
        </div>
        
        <!-- –°–µ–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ (—Å—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞) -->
        <div class="legacy-auth-section">
            <div class="auth-divider">
                <span>–∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ</span>
            </div>
            ${originalAuthHTML}
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    addAuthStyles();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function addAuthStyles() {
    const styles = `
        .auth-tabs {
            display: flex;
            border-bottom: 1px solid var(--border-color);
            margin-bottom: 15px;
        }
        
        .auth-tab {
            flex: 1;
            padding: 12px;
            text-align: center;
            cursor: pointer;
            opacity: 0.7;
            transition: all 0.3s ease;
            border-bottom: 2px solid transparent;
        }
        
        .auth-tab:hover {
            opacity: 0.9;
            background: rgba(255, 255, 255, 0.05);
        }
        
        .auth-tab.active {
            opacity: 1;
            border-bottom: 2px solid #4facfe;
            background: rgba(79, 172, 254, 0.1);
        }
        
        .auth-form {
            display: none;
        }
        
        .auth-form.active {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }
        
        .auth-alert {
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
            text-align: center;
        }
        
        .auth-alert.error {
            background: rgba(255, 100, 100, 0.2);
            color: #ff6464;
            border: 1px solid rgba(255, 100, 100, 0.3);
        }
        
        .auth-alert.success {
            background: rgba(100, 255, 100, 0.2);
            color: #64ff64;
            border: 1px solid rgba(100, 255, 100, 0.3);
        }
        
        .auth-alert.warning {
            background: rgba(255, 200, 100, 0.2);
            color: #ffc864;
            border: 1px solid rgba(255, 200, 100, 0.3);
        }
        
        .auth-options {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 12px;
        }
        
        .auth-checkbox {
            display: flex;
            align-items: center;
            gap: 5px;
            cursor: pointer;
        }
        
        .auth-checkbox input {
            margin: 0;
        }
        
        .auth-link {
            color: #4facfe;
            text-decoration: none;
            font-size: 12px;
        }
        
        .auth-link:hover {
            text-decoration: underline;
        }
        
        .auth-submit-btn {
            padding: 12px;
            background: linear-gradient(to right, #4facfe, #00f2fe);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: transform 0.2s, opacity 0.2s;
        }
        
        .auth-submit-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        .auth-submit-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }
        
        .auth-divider {
            text-align: center;
            margin: 15px 0;
            position: relative;
            color: rgba(255, 255, 255, 0.5);
            font-size: 12px;
        }
        
        .auth-divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: var(--border-color);
            z-index: 1;
        }
        
        .auth-divider span {
            background: var(--primary-bg);
            padding: 0 10px;
            position: relative;
            z-index: 2;
        }
        
        .quick-auth-options {
            display: flex;
            gap: 10px;
        }
        
        .quick-auth-btn {
            flex: 1;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            color: var(--text-color);
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
            font-size: 12px;
        }
        
        .quick-auth-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-1px);
        }
        
        .password-strength {
            margin-top: -5px;
        }
        
        .strength-bar {
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 2px;
            overflow: hidden;
            margin-bottom: 5px;
        }
        
        .strength-fill {
            height: 100%;
            width: 0%;
            transition: width 0.3s ease, background 0.3s ease;
            border-radius: 2px;
        }
        
        .strength-text {
            font-size: 11px;
            text-align: center;
            opacity: 0.7;
        }
        
        .legacy-auth-section {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }
        
        .session-info {
            position: fixed;
            top: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.7);
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 12px;
            z-index: 1000;
        }
    `;
    
    const styleSheet = document.createElement('style');
    styleSheet.textContent = styles;
    document.head.appendChild(styleSheet);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function setupAuthEventListeners() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    document.querySelectorAll('.auth-tab').forEach(tab => {
        tab.addEventListener('click', () => {
            const tabType = tab.getAttribute('data-tab');
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ –∏ —Ñ–æ—Ä–º
            document.querySelectorAll('.auth-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.auth-form').forEach(f => f.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ –∏ —Ñ–æ—Ä–º–µ
            tab.classList.add('active');
            document.getElementById(tabType + 'Form').classList.add('active');
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
    document.getElementById('loginBtn').addEventListener('click', handleLogin);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    document.getElementById('registerBtn').addEventListener('click', handleRegister);
    
    // –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –ø–æ Enter
    document.getElementById('loginPassword').addEventListener('keypress', (e) => {
        if (e.key === 'Enter') handleLogin();
    });
    
    document.getElementById('registerConfirmPassword').addEventListener('keypress', (e) => {
        if (e.key === 'Enter') handleRegister();
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–ª—ã –ø–∞—Ä–æ–ª—è
    document.getElementById('registerPassword').addEventListener('input', checkPasswordStrength);
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
    document.getElementById('forgotPasswordLink').addEventListener('click', handleForgotPassword);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏
function checkExistingSession() {
    const savedSession = localStorage.getItem('quantumAuthSession');
    
    if (savedSession) {
        try {
            const session = JSON.parse(savedSession);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Å—Å–∏–∏
            if (session.expires > Date.now()) {
                currentSession = session;
                isLoggedIn = true;
                
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
                autoLogin(session);
                return true;
            } else {
                // –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞
                localStorage.removeItem('quantumAuthSession');
                showAuthAlert('loginAlert', '–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.', 'warning');
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', e);
            localStorage.removeItem('quantumAuthSession');
        }
    }
    
    return false;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
async function handleLogin() {
    const username = document.getElementById('loginUsername').value.trim();
    const password = document.getElementById('loginPassword').value;
    const rememberMe = document.getElementById('rememberMe').checked;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!username || !password) {
        showAuthAlert('loginAlert', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫
    if (loginAttempts >= AUTH_CONFIG.maxLoginAttempts) {
        showAuthAlert('loginAlert', '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
        return;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    const loginBtn = document.getElementById('loginBtn');
    loginBtn.disabled = true;
    loginBtn.textContent = '–í—Ö–æ–¥...';
    
    try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const user = await authenticateUser(username, password);
        
        if (user) {
            // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
            loginAttempts = 0;
            await createUserSession(user, rememberMe);
            showAuthAlert('loginAlert', '–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!', 'success');
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
            setTimeout(() => {
                enterChatWithAuth(user);
            }, 1000);
            
        } else {
            // –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            loginAttempts++;
            const attemptsLeft = AUTH_CONFIG.maxLoginAttempts - loginAttempts;
            showAuthAlert('loginAlert', `–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: ${attemptsLeft}`, 'error');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
        showAuthAlert('loginAlert', '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        loginBtn.disabled = false;
        loginBtn.textContent = '–í–æ–π—Ç–∏';
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async function handleRegister() {
    const username = document.getElementById('registerUsername').value.trim();
    const email = document.getElementById('registerEmail').value.trim();
    const password = document.getElementById('registerPassword').value;
    const confirmPassword = document.getElementById('registerConfirmPassword').value;
    const agreeTerms = document.getElementById('agreeTerms').checked;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!username || !password || !confirmPassword) {
        showAuthAlert('registerAlert', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    if (password !== confirmPassword) {
        showAuthAlert('registerAlert', '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç', 'error');
        return;
    }
    
    if (password.length < AUTH_CONFIG.minPasswordLength) {
        showAuthAlert('registerAlert', `–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º ${AUTH_CONFIG.minPasswordLength} —Å–∏–º–≤–æ–ª–æ–≤`, 'error');
        return;
    }
    
    if (!agreeTerms) {
        showAuthAlert('registerAlert', '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', 'error');
        return;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    const registerBtn = document.getElementById('registerBtn');
    registerBtn.disabled = true;
    registerBtn.textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...';
    
    try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await registerUser(username, password, email);
        
        if (user) {
            showAuthAlert('registerAlert', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥...', 'success');
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            setTimeout(() => {
                createUserSession(user, true);
                enterChatWithAuth(user);
            }, 2000);
            
        } else {
            showAuthAlert('registerAlert', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'error');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        showAuthAlert('registerAlert', '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        registerBtn.disabled = false;
        registerBtn.textContent = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è';
    }
}

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function authenticateUser(username, password) {
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ localStorage
    const users = getStoredUsers();
    
    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = users.find(u => 
        u.username.toLowerCase() === username.toLowerCase() || 
        u.email.toLowerCase() === username.toLowerCase()
    );
    
    if (!user) {
        return null;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ)
    if (user.password === password) {
        return user;
    }
    
    return null;
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function registerUser(username, password, email = '') {
    const users = getStoredUsers();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –ª–æ–≥–∏–Ω
    const existingUser = users.find(u => u.username.toLowerCase() === username.toLowerCase());
    if (existingUser) {
        return null;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º email, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
    if (email) {
        const existingEmail = users.find(u => u.email.toLowerCase() === email.toLowerCase());
        if (existingEmail) {
            return null;
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const newUser = {
        id: generateUserId(),
        username: username,
        email: email || '',
        password: password, // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ!
        registeredAt: Date.now(),
        lastLogin: Date.now(),
        isActive: true,
        profile: {
            displayName: username,
            avatar: '',
            status: 'online'
        }
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users.push(newUser);
    localStorage.setItem('quantumUsers', JSON.stringify(users));
    
    return newUser;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function createUserSession(user, rememberMe = false) {
    const session = {
        userId: user.id,
        username: user.username,
        loginTime: Date.now(),
        expires: rememberMe ? Date.now() + AUTH_CONFIG.sessionTimeout : Date.now() + (8 * 60 * 60 * 1000), // 8 —á–∞—Å–æ–≤ –∏–ª–∏ 24 —á–∞—Å–∞
        token: generateSessionToken()
    };
    
    currentSession = session;
    isLoggedIn = true;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
    if (rememberMe) {
        localStorage.setItem('quantumAuthSession', JSON.stringify(session));
    } else {
        sessionStorage.setItem('quantumAuthSession', JSON.stringify(session));
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
    updateUserLastLogin(user.id);
    
    console.log('‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.username);
    return session;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥
function autoLogin(session) {
    const users = getStoredUsers();
    const user = users.find(u => u.id === session.userId);
    
    if (user) {
        enterChatWithAuth(user);
    } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º
        logout();
    }
}

// –í—Ö–æ–¥ –≤ —á–∞—Ç —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
function enterChatWithAuth(user) {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    currentUser = user.profile.displayName || user.username;
    userId = user.id;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    document.getElementById('authContainer').style.display = 'none';
    document.getElementById('chatWrapper').style.display = 'flex';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
    showSessionInfo();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç
    initializeChatForAuthUser(user);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function initializeChatForAuthUser(user) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –¥–ª—è:', user.username);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (typeof loadMessages === 'function') loadMessages();
    if (typeof setupOnlineUsers === 'function') setupOnlineUsers();
    if (typeof setupTypingIndicator === 'function') setupTypingIndicator();
    if (typeof setupProfiles === 'function') setupProfiles();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.username}!`);
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    if (currentSession) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        updateUserStatus(currentSession.userId, 'offline');
    }
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏–∏
    currentSession = null;
    isLoggedIn = false;
    localStorage.removeItem('quantumAuthSession');
    sessionStorage.removeItem('quantumAuthSession');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    document.getElementById('authContainer').style.display = 'flex';
    document.getElementById('chatWrapper').style.display = 'none';
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
    document.getElementById('loginUsername').value = '';
    document.getElementById('loginPassword').value = '';
    
    console.log('‚úÖ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–µ–Ω');
}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
function handleForgotPassword(e) {
    e.preventDefault();
    
    const username = document.getElementById('loginUsername').value.trim();
    
    if (!username) {
        showAuthAlert('loginAlert', '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –∏–ª–∏ email –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è', 'warning');
        return;
    }
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª—Å—è email
    showAuthAlert('loginAlert', '–§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'warning');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–ª—ã –ø–∞—Ä–æ–ª—è
function checkPasswordStrength() {
    const password = document.getElementById('registerPassword').value;
    const strengthFill = document.getElementById('strengthFill');
    const strengthText = document.getElementById('strengthText');
    
    let strength = 0;
    let text = '–°–ª–∞–±—ã–π';
    let color = '#ff4757';
    
    if (password.length >= AUTH_CONFIG.minPasswordLength) {
        strength += 25;
    }
    
    if (password.match(/[a-z]/) && password.match(/[A-Z]/)) {
        strength += 25;
    }
    
    if (password.match(/\d/)) {
        strength += 25;
    }
    
    if (password.match(/[^a-zA-Z\d]/)) {
        strength += 25;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∏ —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏–ª—ã
    if (strength >= 75) {
        text = '–°–∏–ª—å–Ω—ã–π';
        color = '#2ed573';
    } else if (strength >= 50) {
        text = '–°—Ä–µ–¥–Ω–∏–π';
        color = '#ffa502';
    } else if (strength >= 25) {
        text = '–°–ª–∞–±—ã–π';
        color = '#ff4757';
    } else {
        text = '–û—á–µ–Ω—å —Å–ª–∞–±—ã–π';
        color = '#ff4757';
    }
    
    strengthFill.style.width = strength + '%';
    strengthFill.style.background = color;
    strengthText.textContent = text;
    strengthText.style.color = color;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function showAuthAlert(alertId, message, type = 'info') {
    const alertElement = document.getElementById(alertId);
    if (!alertElement) return;
    
    alertElement.textContent = message;
    alertElement.className = `auth-alert ${type}`;
    alertElement.style.display = 'block';
    
    // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        alertElement.style.display = 'none';
    }, 5000);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
function showSessionInfo() {
    const sessionInfo = document.createElement('div');
    sessionInfo.className = 'session-info';
    sessionInfo.innerHTML = `
        <i class="fas fa-user"></i> ${currentSession.username}
        <button onclick="logout()" style="margin-left: 5px; background: none; border: none; color: inherit; cursor: pointer;">
            <i class="fas fa-sign-out-alt"></i>
        </button>
    `;
    
    document.body.appendChild(sessionInfo);
}

// –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ (–¥–µ–º–æ/–≥–æ—Å—Ç—å)
function quickLogin(type) {
    let username, password;
    
    switch (type) {
        case 'demo':
            username = 'demo';
            password = 'demo123';
            break;
        case 'guest':
            username = '–ì–æ—Å—Ç—å_' + Math.floor(Math.random() * 1000);
            password = 'guest123';
            break;
        default:
            return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('loginUsername').value = username;
    document.getElementById('loginPassword').value = password;
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
    handleLogin();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

function getStoredUsers() {
    try {
        return JSON.parse(localStorage.getItem('quantumUsers')) || [];
    } catch (e) {
        return [];
    }
}

function generateUserId() {
    return 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
}

function generateSessionToken() {
    return 'token_' + Date.now() + '_' + Math.random().toString(36).substr(2, 16);
}

function updateUserLastLogin(userId) {
    const users = getStoredUsers();
    const userIndex = users.findIndex(u => u.id === userId);
    
    if (userIndex !== -1) {
        users[userIndex].lastLogin = Date.now();
        users[userIndex].profile.status = 'online';
        localStorage.setItem('quantumUsers', JSON.stringify(users));
    }
}

function updateUserStatus(userId, status) {
    const users = getStoredUsers();
    const userIndex = users.findIndex(u => u.id === userId);
    
    if (userIndex !== -1) {
        users[userIndex].profile.status = status;
        localStorage.setItem('quantumUsers', JSON.stringify(users));
    }
}

function showTerms() {
    alert(`
    –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Quantum Messenger:
    
    1. –ù–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å —Å–ø–∞–º –∏ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    2. –£–≤–∞–∂–∞—Ç—å –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    3. –°–æ–±–ª—é–¥–∞—Ç—å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§
    4. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–ø—Ä–∞–≤–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π
    
    –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∞–≤–∏–ª –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É.
    `);
}

// –ó–∞—â–∏—Ç–∞ –æ—Ç XSS –∏ –∏–Ω—ä–µ–∫—Ü–∏–π
function sanitizeInput(input) {
    const div = document.createElement('div');
    div.textContent = input;
    return div.innerHTML;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.authSystem = {
    init: initAuthSystem,
    login: handleLogin,
    register: handleRegister,
    logout: logout,
    quickLogin: quickLogin,
    isLoggedIn: () => isLoggedIn,
    getCurrentUser: () => currentSession
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initAuthSystem);
} else {
    initAuthSystem();
}